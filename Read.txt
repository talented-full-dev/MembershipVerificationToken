Checklist:

Windows:
1. VS Code
2. npm, Node
3. Visual Studio(not mandatory)
4. Git for Windows
5. Windows Subsystem for Linux (For bash)

Subsystem for Linux:
1. npm, node
2. cpp
3. pip
4. sphinx
5. Git

Vote:
interface ERC1202 {

    // Vote with an option. The caller needs to handle success or not
    function vote(uint option) external returns (bool success);
    function setStatus(bool isOpen) external returns (bool success);

    function issueDescription() external view returns (string desc);
    function availableOptions() external view returns (uint[] options);
    function optionDescription(uint option) external view returns (string desc);
    function ballotOf(address addr) external view returns (uint option);
    function weightOf(address addr) external view returns (uint weight);
    function getStatus() external view returns (bool isOpen);
    function weightedVoteCountsOf(uint option) external view returns (uint count);
    function winningOption() external view returns (uint option);

    event OnVote(address indexed _from, uint _value);
    event OnStatusChange(bool newIsOpen);
}


We are currently developing multiple standard smart contracts which act as organizations with polling infrastructure.
These smart contracts are blockchain agnostic and can be deployed on Multiple platforms such as Ethereum, WanChain and EOS.
The reason we are using blockchain is to ensure immutability and transparency in governance.